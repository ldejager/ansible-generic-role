---
- name: Repos - Enable EPEL repo
  become: true
  yum:
    name: epel-release
    state: latest
  tags:
    - repositories

- name: Packages - Install generic useful packages
  become: true
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    - vim
    - nc
    - git
    - lsof
    - screen
    - telnet
    - wget
    - sysstat
    - rsync
    - bash-completion
    - bind-utils
    - iptables-services
  tags:
    - generic

- name: Disable firewalld
  service: name=firewalld state=stopped
  tags:
    - iptables

- name: Create data directory
  file: path=/data state=directory mode=0755
  tags:
    - iptables

- name: Copy iptables.rules to disk
  copy: src=iptables.rules
        dest=/data/iptables.rules
        owner=root group=root mode=0644
  tags:
    - iptables

- name: Update iptables unit file
  lineinfile:
    state: present
    dest: /usr/lib/systemd/system/iptables.service
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: '^ExecStart', line: 'ExecStart=/usr/sbin/iptables-restore /data/iptables.rules' }
    - { regexp: '^ExecReload', line: 'ExecReload=/usr/sbin/iptables-restore /data/iptables.rules' }
    - { regexp: '^ExecStop', line: 'ExecStop=/usr/sbin/iptables --flush' }
  tags:
    - iptables

- name: Reload systemd
  command: systemctl daemon-reload
  tags:
    - iptables

- name: Enable iptables
  service: name=iptables state=started
  tags:
    - iptables

- name: Selinux - Install libselinux-python package
  yum: name=libselinux-python state=present
  tags: selinux

- name: Selinux - Set SELinux policy and state
  selinux: state=disabled
  tags: selinux

- name: Users - Configure members of wheel group for passwordless sudo
  become: true
  lineinfile:
    dest: /etc/sudoers
    regexp: "^%wheel"
    line: "%wheel ALL=(ALL) NOPASSWD: ALL"
    state: present
  tags:
    - users

- name: Timezone - Set timezone to etc/utc
  become: true
  file:
    src: /usr/share/zoneinfo/Etc/UTC
    dest: /etc/localtime
    state: link
    force: yes
  tags:
    - timezone

- name: Swap - Allocate swap
  command: |
    dd if=/dev/zero of={{ swap_location }} count={{ swap_size }} bs=1MiB creates={{ swap_location }}
  register: allocate_swap
  when:
    - swap_size|default(False)
  tags:
    - swap

- name: Swap - Set permissions
  file: path={{ swap_location }} mode=600
  when:
    - swap_size|default(False)
  tags:
    - swap

- name: Swap - Setup swap
  command: mkswap {{ swap_location }}
  register: setup_swap
  when:
    - allocate_swap.changed
    - swap_size|default(False)
  tags:
    - swap

- name: Swap -Enable swap
  command: swapon {{ swap_location }}
  when:
    - allocate_swap.changed
    - swap_size|default(False)
  tags:
    - swap

- name: Swap -Add swap to /etc/fstab
  lineinfile: dest=/etc/fstab line="{{ swap_location }}   none    swap    sw    0   0" state=present
  when:
    - swap_size|default(False)
  tags:
    - swap
